import os
import textwrap
import time
from datetime import datetime

import unidecode
from PIL import Image, ImageChops, ImageDraw, ImageFont
from pyrogram import filters
from pyrogram.types import ChatMemberUpdated, Message

from camillia import DRAGONS
from camillia import pbot
from camillia.modules.helper_funcs.chat_status import user_admin
from utils import temp

BOT_USERNAME = "MissCamellia_Bot"
LOG_CHANNEL = -1001596651023

def circle(pfp, size=(215, 215), background_size=(1024, 500)):
    pfp = pfp.resize(size, Image.ANTIALIAS).convert("RGBA")
    bigsize = (background_size[0], background_size[1])
    offset = ((background_size[0] - size[0]) // 2, (background_size[1] - size[1]) // 2)
    mask = Image.new("L", bigsize, 0)
    draw = ImageDraw.Draw(mask)
    draw.ellipse((offset[0], offset[1], offset[0] + size[0], offset[1] + size[1]), fill=255)
    mask = mask.resize(pfp.size, Image.ANTIALIAS)
    mask = ImageChops.darker(mask, pfp.split()[-1])
    pfp.putalpha(mask)
    return pfp

def draw_multiple_line_text(image, text, font, text_start_height):
    draw = ImageDraw.Draw(image)
    image_width, image_height = image.size
    y_text = text_start_height
    lines = textwrap.wrap(text, width=50)
    for line in lines:
        line = unidecode.unidecode(line)  # Convert the text to ASCII characters
        line_width, line_height = font.getsize(line)
        draw.text(
            ((image_width - line_width) // 2, y_text), line, font=font, fill="black"
        )
        y_text += line_height

def welcomepic(pic, user, chat, user_id):
    background = Image.open("assets/bg.png")  # <- Background Image (Should be PNG)
    background = background.resize((1024, 500), Image.ANTIALIAS)
    pfp = Image.open(pic).convert("RGBA")
    pfp = circle(pfp, size=(265, 265), background_size=(1024, 500))
    font = ImageFont.truetype(
        "assets/Calistoga-Regular.ttf", 37
    )  # <- Text Font of the Member Count. Change the text size for your preference
    member_text = f"Ohayo {user} [{user_id}]"  # <- Text under the Profilepicture with the Membercount
    draw_multiple_line_text(background, member_text, font, 395)
    draw_multiple_line_text(background, chat, font, 47)
    ImageDraw.Draw(background).text(
        (530, 460),
        f"Generated by @{BOT_USERNAME}",
        font=ImageFont.truetype("assets/Calistoga-Regular.ttf", 28),
        size=20,
        align="right",
    )
    background.paste(
        pfp, (379, 123), pfp
    )  # Pastes the Profilepicture on the Background Image
    welcome_image_path = f"downloads/welcome#{user_id}.png"
    background.save(
        welcome_image_path
    )  # Saves the finished Image in the folder with the filename
    return welcome_image_path

@pbot.on_chat_member_updated(filters.group)
def member_has_joined(_, member: ChatMemberUpdated):
    if (
        not member.new_chat_member
        or member.new_chat_member.status in {"banned", "left", "restricted"}
        or member.old_chat_member
    ):
        return
    user = member.new_chat_member.user if member.new_chat_member else member.from_user
    if user.id in DRAGONS:
        _.send_message(
            member.chat.id,
            "**Global Admins Joined The Chat!**",
        )
        return
    elif user.is_bot:
        return  # ignore bots
    else:
        chat_id = member.chat.id
        if f"welcome-{chat_id}" in temp.MELCOW:
            try:
                temp.MELCOW[f"welcome-{chat_id}"].delete()
            except:
                pass
        mention = f"<a href='tg://user?id={user.id}'>{user.first_name}</a>"
        joined_date = datetime.fromtimestamp(time.time()).strftime("%Y.%m.%d %H:%M:%S")
        first_name = (
            f"{user.first_name} {user.last_name}" if user.last_name else user.first_name
        )
        user_id = user.id
        dc = user.dc_id
        try:
            pic = pbot.download_media(
                user.photo.big_file_id, file_name=f"pp{user_id}.png"
            )
        except AttributeError:
            pic = "assets/profilepic.png"
        try:
            welcomeimg = welcomepic(pic, user.first_name, member.chat.title, user_id)
            temp.MELCOW[f"welcome-{chat_id}"] = _.send_photo(
                member.chat.id,
                photo=welcomeimg,
                caption=f"**Hey❗️{mention}, Welcome To {member.chat.title} Group.**\n\n**➖➖➖➖➖➖➖➖➖➖➖➖**\n**Name : {first_name}**\n**ID : {user_id}**\n**Date Joined : {joined_date}**",
            )
        except Exception as e:
            print(e)
        try:
            os.remove(f"downloads/welcome#{user_id}.png")
            os.remove(f"downloads/pp{user_id}.png")
        except Exception:
            pass

